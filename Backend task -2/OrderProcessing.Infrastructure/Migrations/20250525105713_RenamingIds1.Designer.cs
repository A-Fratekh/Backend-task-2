// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderProcessing.Infrastructure.Data;

#nullable disable

namespace OrderProcessing.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525105713_RenamingIds1")]
    partial class RenamingIds1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderProcessing.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderProcessing.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OrderProcessing.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "6 Shawerma Pcs",
                            Name = "Sahwerma Meal",
                            Photo = new byte[0]
                        },
                        new
                        {
                            Id = 2,
                            Description = "Zinger wrap",
                            Name = "Zinger Sandwich",
                            Photo = new byte[0]
                        },
                        new
                        {
                            Id = 3,
                            Description = "9 Shawerma Pcs",
                            Name = "Super Sahwerma Meal",
                            Photo = new byte[0]
                        },
                        new
                        {
                            Id = 4,
                            Description = "Italian Shawerma",
                            Name = "Italian Sahwerma Meal",
                            Photo = new byte[0]
                        });
                });

            modelBuilder.Entity("OrderProcessing.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.OwnsOne("OrderProcessing.Domain.Shared.Money", "Total", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Total")
                        .IsRequired();
                });

            modelBuilder.Entity("OrderProcessing.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("OrderProcessing.Domain.Aggregates.OrderAggregate.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderProcessing.Domain.Aggregates.ProductAggregate.Product", null)
                        .WithOne()
                        .HasForeignKey("OrderProcessing.Domain.Aggregates.OrderAggregate.OrderItem", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("OrderProcessing.Domain.Shared.Money", "Price", b1 =>
                        {
                            b1.Property<int>("OrderItemOrderId")
                                .HasColumnType("int");

                            b1.Property<int>("OrderItemId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("OrderItemOrderId", "OrderItemId");

                            b1.ToTable("OrderItems");

                            b1.WithOwner()
                                .HasForeignKey("OrderItemOrderId", "OrderItemId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("OrderProcessing.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.OwnsOne("OrderProcessing.Domain.Shared.Money", "CurrentPrice", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.HasData(
                                new
                                {
                                    ProductId = 1,
                                    Amount = 2.6m
                                },
                                new
                                {
                                    ProductId = 2,
                                    Amount = 1.5m
                                },
                                new
                                {
                                    ProductId = 3,
                                    Amount = 2.8m
                                },
                                new
                                {
                                    ProductId = 4,
                                    Amount = 3.5m
                                });
                        });

                    b.Navigation("CurrentPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("OrderProcessing.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
